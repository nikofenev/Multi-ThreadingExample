package edu.matc.MultiThreadingHalloween;import org.apache.log4j.Logger;import java.util.Date;import java.util.concurrent.TimeUnit;/** Created 10/03/17 * *  @author nfenev */class KidGenerator implements Runnable {    private final Logger logger = Logger.getLogger(this.getClass());    private static final long TEN = 10;    private Halloween halloween;    public KidGenerator(Halloween halloweenIn) {        this.halloween = halloweenIn;    }    public void run() {        logger.info("Starting KidGenerator thread");        while (true) { //yes I do need infinite loop :)            logger.info("Generating kids");            Kid kid = new Kid(halloween);            kid.setInTime(new Date());            Thread threadKid = new Thread(kid);            kid.setName("Kid Thread " + threadKid.getId());            threadKid.start();            try {                TimeUnit.SECONDS.sleep((long) (Math.random() * TEN));            } catch (InterruptedException iex) {                logger.info("Interrupted: ",iex);            }        }    }}